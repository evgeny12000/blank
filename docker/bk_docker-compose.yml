services:
  frontend-cont:
#    restart: always
    build:
      context: ../
      dockerfile: docker/FrontendDockerfile
    environment:
      - PORT=${FRONTEND_PORT}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ../bk_frontend:/var/www/frontend

  api-cont:
#    restart: always
    build:
      context: ../
      dockerfile: docker/NestApiDockerfile
    ports:
      - "${API_PORT}:${API_PORT}"
      - "${DEBUGGER_PORT}:${DEBUGGER_PORT}"

    environment:
      PORT: ${API_PORT}
      NODE_ENV: ${NODE_ENV}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ../api:/var/www/api
    depends_on:
      - mysql-cont
      - redis-cont
      - mongo-cont

  mysql-cont:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
#    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    volumes:
    - mysql-data-volume:/var/lib/mysql
    - ./my.cnf:/etc/mysql/conf.d/my.cnf

  redis-cont:
#    restart: always
    image: "redis:alpine"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis-data-volume:/data

  mongo-cont:
#    restart: always
    image: "mongo"
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo-data-volume:/data/db

volumes:
  mysql-data-volume:
  mongo-data-volume:
  redis-data-volume: